{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Persons","persons","filter","removePerson","map","person","name","toLowerCase","includes","number","onClick","Filter","handleFilterChange","onChange","Personform","props","onSubmit","addContact","value","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","notificationStyle","color","notificationColor","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","setNewFilter","setNewName","setNewNumber","setNotification","setNotificationColor","useEffect","personService","addedPerson","message","displayNotification","setTimeout","event","target","preventDefault","found","find","window","confirm","changedPerson","returnedPerson","catch","error","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4777efd1.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst add = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll, add, update, remove\r\n}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Persons = ({ persons, filter, removePerson }) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person => {\r\n                if (person.name.toLowerCase().includes(filter)) {\r\n                    return (\r\n                        <div key={person.id}>\r\n                            {person.name} {person.number}\r\n                            <button name={person.name} id={person.id} onClick={removePerson}> delete </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return null\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({ handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input\r\n                onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Personform = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addContact}>\r\n                <div>\r\n                    name:\r\n                    <input\r\n                        value={props.newName}\r\n                        onChange={props.handleNameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    number:\r\n                    <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Notification = ({ notification, notificationColor }) => {\r\n    const notificationStyle = {\r\n        color: notificationColor,\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if (notification === null) {\r\n        return <div />\r\n    }\r\n    else {\r\n        return (\r\n            <div style={notificationStyle}>\r\n                {notification}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [filter, setNewFilter] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [notification, setNotification] = useState(null)\r\n    const [notificationColor, setNotificationColor] = useState('green')\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response)\r\n            })\r\n    }, [])\r\n\r\n    const addContact = (event) => {\r\n        event.preventDefault()\r\n        const found = persons.find(person => person.name.includes(newName))\r\n        if (found) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\r\n                const changedPerson = {\r\n                    name: newName,\r\n                    id: found.id,\r\n                    number: newNumber,\r\n                }\r\n                personService\r\n                    .update(changedPerson.id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.number !== found.number ? person : changedPerson))\r\n                        addedPerson(`Changed ${newName}`)\r\n                    })\r\n                    .catch(error => {\r\n                        displayNotification(`${newName} not found at server`, 'red')\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            const newPerson = {\r\n                name: newName,\r\n                id: persons[persons.length - 1].id + 1,\r\n                number: newNumber,\r\n            }\r\n            personService\r\n                .add(newPerson)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response))\r\n                    addedPerson(`Added ${newName}`)\r\n                })\r\n                .catch(error => {\r\n                    displayNotification(`Can't add ${newName} to the server`, 'red')\r\n                })\r\n        }\r\n    }\r\n\r\n    const addedPerson = (message) => {\r\n        displayNotification(message, 'green')\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const removePerson = (props) => {\r\n        if (window.confirm(`delete ${props.target.name}`)) {\r\n            personService\r\n                .remove(props.target.id)\r\n                .then(() => personService.getAll())\r\n                .then(response => {\r\n                    setPersons(response)\r\n                    displayNotification(`Deleted ${props.target.name}`, 'red')\r\n                })\r\n                .catch(error => {\r\n                    displayNotification(`${props.target.name} has already been removed from server`, 'red')\r\n                })\r\n        }\r\n    }\r\n\r\n    const displayNotification = (message, color) => {\r\n        setNotification(message)\r\n        setNotificationColor(color)\r\n        setTimeout(() => setNotification(null), 5000)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification\r\n                notification={notification}\r\n                notificationColor={notificationColor}\r\n            />\r\n            <Filter\r\n                handleFilterChange={handleFilterChange}\r\n            />\r\n            <h3>Add a new</h3>\r\n            <Personform\r\n                addContact={addContact}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons\r\n                persons={persons}\r\n                filter={filter}\r\n                removePerson={removePerson}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,\n    document.getElementById('root'))"],"sourceRoot":""}